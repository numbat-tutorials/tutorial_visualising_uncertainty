---
title: "Session 2: Incorporating uncertainty into spatial data visualisations"
author: 
  - name: "Harriet Mason, Dianne Cook"
institute: "Department of Econometrics and Business Statistics, Monash University, Australia."
format: 
  revealjs:
    theme: [default, _extensions/EmilHvitfeldt/letterbox/letterbox.scss, _extensions/numbats/monash/assets/monash.scss, _extensions/mitchelloharawild/custom-callouts/resources/css/custom-callouts.scss]
    css: [style/custom.css]
    include-after-body: _extensions/EmilHvitfeldt/letterbox/theme.html
    width: 1280
    height: 750
    slide-number: c/t
    embed-resources: true
title-slide-attributes: 
  data-background-image: "_extensions/numbats/monash/images/bg-10.png"
  data-background-size: contain
  data-background-position: "justify"
template-partials:
  - style/title-slide.html 
footer: "[Visualising uncertainty]"
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

# set width of code output
options(width = 65)

# set plot defaults
ggplot2::theme_set(ggplot2::theme_gray(base_size = 14))

# set figure parameters for knitr
# knitr::opts_chunk$set(
#   out.width = "80%",
#   fig.width = 8,        # 7" width
#   fig.asp = 0.618,      # the golden ratio
#   fig.retina = 3,       # dpi multiplier for displaying HTML output on retina
#   fig.align = "center", # center align figures
#   dpi = 300,             # higher dpi, sharper image
#   code.line.numbers = FALSE,
#   comment = " "
# )

knitr::opts_chunk$set(
  fig.width = 5,
  fig.height = 5,
  fig.align = "center",
  out.width = "100%",
  code.line.numbers = FALSE,
  fig.retina = 4,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  cache = FALSE,
  dev.args = list(pointsize = 11)
)

options(
  dplyr.print_min = 6, 
  dplyr.print_max = 6
)
```

## Session 2 Overview
1. Hands-on spatial example
  - Discuss motivating example for data set
2. Unique challenges of visualising map data
3. Methods for visualising uncertainty in maps


# Hands-on spatial example <br> Going from data to quantified uncertainty

## My Dog Bosco

## Data we will be working with

```{r, Download ALA data}
#| eval: false
# Get possom and magpie data
# Animal Data (or ALA)
library(galah)

# Set up with email
galah_config(email = "harriet.mason1@monash.edu")

# Common Brushtail Possum - Trichosurus vulpecula
# Common Ringtail Possum - Pseudocheirus peregrinus
# Australian Magpie - Gymnorhina tibicen
# Magpie-Lark - Grallina cyanoleuca
animal_names <- c("Gymnorhina tibicen", "Grallina cyanoleuca",
                  "Trichosurus vulpecula", "Pseudocheirus peregrinus")


# Download ALA data
ala_data <- galah_call() |>
  identify(animal_names) |>
  filter(year >= 2024) |>
  select(group = "basic") |>
  collect()
save(ala_data, file="session2/data/ala_data.rda")
```

```{r, Clean AlA data}
# load ALA data
load("session2/data/ala_data.rda")

# func: name change 1
sci_to_common <- function(x){
  # x is a single string value
  scientific_names <- c("Trichosurus vulpecula", 
                        "Pseudocheirus peregrinus", 
                        "Gymnorhina tibicen", 
                        "Grallina cyanoleuca")
  common_names <- c("Common Brushtail Possum", 
                    "Common Ringtail Possum", 
                    "Australian Magpie", 
                    "Magpie-Lark")
  common_names[which(stringr::str_detect(x, scientific_names))]
}

# made another function for class
sci_to_type <- function(x){
  # x is a single string value
  scientific_names <- c("Trichosurus vulpecula", 
                        "Pseudocheirus peregrinus", 
                        "Gymnorhina tibicen", 
                        "Grallina cyanoleuca")
  common_names <- c("Possum", "Possum", "Magpie", "Magpie")
  common_names[which(stringr::str_detect(x, scientific_names))]
}


# Add common names and type
ala_data$commonName <- sapply(ala_data$scientificName, sci_to_common)
ala_data$animalType <- sapply(ala_data$scientificName, sci_to_type)

# just grab some of the variables
ala_tidy <- ala_data |>
  select(commonName, animalType, decimalLatitude, decimalLongitude, eventDate)
```

```{r}
# check data
library(ggplot2)
ggplot(data=ala_tidy) +
  geom_point(aes(x=decimalLongitude, y=decimalLatitude, colour=animalType), alpha=0.1)

```

```{r}
# Get postcode data
postcodes <- strayr::read_absmap("postcode2021")
```
## General structure of spatial data
- General structure of spatial data and basic data cleaning 
- Point
- Area
- Line
  
  
## Previously mentioned uncertainty in map contexts
- Assumption violations
- Missing data
  - animals need to be seen by people
    - locations with people
    - size of animal
    - time of day
- Measurement error
  - I know ALA round their data to stop people from finding endangered animals
    - Sugar gliders are pets in america (so weird) which I found out from a random podcast
      - I don't think they are the australian variety though

## Additional sources of uncertainty in spatial cases
- Aggregation
  - e.g. data summarised for a specific region

## Going from data to quantified uncertainty
- Methods to arrive at quantified uncertainty
    - Bootstrapping
    - Theoretical distribution (assumed normal?)

## Spatial data with an uncertainty component


# Topic 2 - Unique challenges of visualising map data

## Why such a focus on spatial visualisations?

Spatial case is a good example to work through because the aesthetics we have to express estimates are limited-
- Variables that areâ€¦
    - Fixed = 
        - position
        - size
        - shape
    - Variables (all kind of change the same thing)
        - colour / fill
        - alpha (transparency) - indistinguishble from changing the colour value tbh
- Not uncommon for maps to warp the fixed elements, or get creative and add stuff 
    - hex plots
    - cartogram
    - grid layout
    - glyph maps

## Goal of a spatial visualisation

## Typical spatial visualisations

## Existing approaches for spatial visualisation

## Topic 3: Methods for visualising uncertainty in maps 

Go through some popular packages. Show what format the data needs to be in. Show how to make plots using this data format. 

## Popular packages for visualising uncertainty in maps
Different packages require different input and cleaning processes
- Vizumap: distribution as a q function
- ggdibbler: distribution from distributional
- biscale: estimate and standard error as two variables

## Input and cleaning processes for uncertain data

## Translating between different data types

## Creating maps with uncertain data

Spatial cases
- Choropleth map
    - ggplot2
- Bivar & VSUP
    - kind of made up with no obvious way to align results with hypothesis testing
    - 2D palette
    - vizumap, biscale, ggdibbler
- Pixel maps
    - ggdibbler and vizumap methods
- Glyph maps
    - vizumap


