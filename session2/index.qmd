---
title: "Session 2: Incorporating uncertainty into spatial data visualisations"
author: 
  - name: "Harriet Mason, Dianne Cook"
institute: "Department of Econometrics and Business Statistics, Monash University, Australia."
format: 
  revealjs:
    theme: [default, _extensions/EmilHvitfeldt/letterbox/letterbox.scss, _extensions/numbats/monash/assets/monash.scss, _extensions/mitchelloharawild/custom-callouts/resources/css/custom-callouts.scss]
    css: [style/custom.css]
    include-after-body: _extensions/EmilHvitfeldt/letterbox/theme.html
    width: 1280
    height: 750
    slide-number: c/t
    embed-resources: true
title-slide-attributes: 
  data-background-image: "_extensions/numbats/monash/images/bg-10.png"
  data-background-size: contain
  data-background-position: "justify"
template-partials:
  - style/title-slide.html 
footer: "[Visualising uncertainty]"
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false

# set width of code output
options(width = 65)

# set plot defaults
ggplot2::theme_set(ggplot2::theme_gray(base_size = 14))

# set figure parameters for knitr
# knitr::opts_chunk$set(
#   out.width = "80%",
#   fig.width = 8,        # 7" width
#   fig.asp = 0.618,      # the golden ratio
#   fig.retina = 3,       # dpi multiplier for displaying HTML output on retina
#   fig.align = "center", # center align figures
#   dpi = 300,             # higher dpi, sharper image
#   code.line.numbers = FALSE,
#   comment = " "
# )

knitr::opts_chunk$set(
  fig.width = 5,
  fig.height = 5,
  fig.align = "center",
  out.width = "100%",
  code.line.numbers = FALSE,
  fig.retina = 4,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  cache = FALSE,
  dev.args = list(pointsize = 11)
)

options(
  dplyr.print_min = 6, 
  dplyr.print_max = 6
)
```

```{r}
library(tidyverse)
```
## Session 2 Overview
1. Hands-on spatial example
  - Discuss motivating example for data set
2. Unique challenges of visualising map data
3. Methods for visualising uncertainty in maps


# Hands-on spatial example <br> Going from data to quantified uncertainty

## Recently I had to move
![](images/img4.jpg)
## Which meant thinking about where I want to live
![](images/img5.jpg)

## Suburb spatial data
```{r}
#| eval: false

# Get postcode data
suburbs <- strayr::read_absmap("suburb2021")

# Select just 10 or so around me
nearby_suburbs <- c("South Yarra",
                    "South Melbourne", 
                    "Toorak",
                    "Melbourne", 
                    "Richmond", 
                    "Prahran",
                    "Windsor",
                    "Middle Park",
                    "Albert Park",
                    "Cremorne",
                    "Burnley",
                    "Southbank")

# clean data to just local suburbs
my_suburbs <- suburbs |> 
  filter(state_name_2021 == "Victoria") |>
  mutate(suburb_name_2021 = str_remove(suburb_name_2021, " \\(Vic.\\)")) |>
  filter(suburb_name_2021 %in% nearby_suburbs) |>
  mutate(plot_long = cent_long,
         plot_lat = cent_lat)

# EDIT SOME SUBURB LABELS
# Melbourne
my_suburbs$plot_lat[4] <- my_suburbs$plot_lat[4] + 0.01
my_suburbs$plot_long[4] <- my_suburbs$plot_long[4] - 0.005
# Prahan
my_suburbs$plot_lat[6] <- my_suburbs$plot_lat[6] + 0.001
# Albert Park
my_suburbs$plot_lat[1] <- my_suburbs$plot_lat[1] + 0.001
my_suburbs$plot_long[1] <- my_suburbs$plot_long[1] - 0.008
# South Melbourne
my_suburbs$plot_long[8] <- my_suburbs$plot_long[8] + 0.001

save(my_suburbs, file="session2/data/my_suburbs.rda")

```

```{r}
# load ALA data
load("session2/data/my_suburbs.rda")

# Suburb plot
my_suburbs |>
  ggplot() +
  geom_sf(aes(fill=suburb_name_2021), alpha=0.7) +
  theme_minimal() +
  geom_text(aes(y=plot_lat, x=plot_long, label = suburb_name_2021), size=1.2) +
  scale_fill_brewer(palette = "Set3") +
  xlab("Longitude") + ylab("Latitude") +
  theme(legend.position = "none")
```

Spatial data has...
- Three components
  - 
- Three possible formats
  - Point
  - Area
  - Line

## But someone else's needs are more important
![](images/img6.jpg)

## My Dog Bosco
![](images/img1.jpg)
## Bosco's Hobbies
![](images/img2.jpg)

## Bosco's #1 Hobby
![](images/img3.jpg)


## Data we will be working with

```{r, Download ALA data}
#| eval: false
# Get possom and magpie data
# Animal Data (or ALA)
library(galah)

# Set up with email
galah_config(email = "harriet.mason1@monash.edu",
             password = "ds8AKy&zEtYNO4",
             atlas = "Australia")

# Common Brushtail Possum - Trichosurus vulpecula
# Common Ringtail Possum - Pseudocheirus peregrinus
# Australian Magpie - Gymnorhina tibicen
# Magpie-Lark - Grallina cyanoleuca
scientific_names <- c("Trichosurus vulpecula", "Pseudocheirus peregrinus")
common_names <- c("Common Brushtail Possum", "Common Ringtail Possum")

# Download ALA data
ala_data <- galah_call() |>
  identify(scientific_names) |>
  filter(year >= 2015) |>
  select(group = "basic") |>
  collect()

ala_tidy <- ala_data |>
  filter(str_starts(scientificName, "Trichosurus") | str_starts(scientificName, "Pseudocheirus"))|>
  select(scientificName, decimalLatitude, decimalLongitude, eventDate)

#save(ala_data, file="session2/data/ala_data.rda")

# check number of files
# just grab some of the variables
check <- ala_tidy |>
  filter(between(decimalLatitude, -37.86016, -37.79806),
         between(decimalLongitude, 144.9408, 145.0327)) |>
  st_as_sf(coords = c("decimalLongitude", "decimalLatitude"), crs = subs_crs)


# check data over suburb data
ggplot() +
  geom_sf(data=my_suburbs) +
  geom_sf(data = check)
```

```{r, Clean AlA data}
# load ALA data
load("session2/data/ala_data.rda")

ggplot(data=ala_tidy) +
  geom_point(aes(x=decimalLongitude, y=decimalLatitude), alpha=0.1)

# just grab some of the variables
check <- ala_tidy |>
  filter(between(decimalLatitude, -37.86016, -37.79806),
         between(decimalLongitude, 144.9408, 145.0327)) |>
  st_as_sf(coords = c("decimalLongitude", "decimalLatitude"), crs = subs_crs)


# check data
ggplot() +
  geom_sf(data=bosco_data) +
  geom_sf(data = check)
```


```{r}
# Combine suburb to possum data
genLatitude <- runif(100,-37.86016, -37.79806) #noise
genLongitude <-  runif(100, 144.9408, 145.0327) #noise

# get suburb CRS
subs_crs <- st_crs(my_suburbs)

# Convert possum data to SF object
point_data <- generated_point |>
  st_as_sf(coords = c("decimalLongitude", "decimalLatitude"),
             crs = subs_crs)

# Combine suburb and possum data
bosco_data <- st_join(my_suburbs, point_data) |>
    na.omit()

```

```{r}

```




## Ways of plotting spatial data
- Not uncommon for maps to warp the fixed elements, or get creative and add stuff 
    - hex plots
    - cartogram
    - grid layout
    - glyph maps

## Popular packages for visualising uncertainty in maps
Different packages require different input and cleaning processes
- Vizumap: distribution as a q function
- ggdibbler: distribution from distributional
- biscale: estimate and standard error as two variables

## Work through example with ggdibbler

## Previously mentioned uncertainty in map contexts
- Assumption violations
- Missing data
  - animals need to be seen by people
    - locations with people
    - size of animal
    - time of day
- Measurement error
  - I know ALA round their data to stop people from finding endangered animals
    - Sugar gliders are pets in america (so weird) which I found out from a random podcast
      - I don't think they are the australian variety though

## Additional sources of uncertainty in spatial cases
- Aggregation
  - e.g. data summarised for a specific region

## Going from data to quantified uncertainty
- Methods to arrive at quantified uncertainty
    - Bootstrapping
    - Theoretical distribution (assumed normal?)

## Spatial data with an uncertainty component



## Why such a focus on spatial visualisations?

Spatial case is a good example to work through because the aesthetics we have to express estimates are limited-
- Variables that areâ€¦
    - Fixed = 
        - position
        - size
        - shape
    - Variables (all kind of change the same thing)
        - colour / fill
        - alpha (transparency) - indistinguishble from changing the colour value tbh



## Goal of a spatial visualisation

## Typical spatial visualisations

## Existing approaches for spatial visualisation

## Topic 3: Methods for visualising uncertainty in maps 

Go through some popular packages. Show what format the data needs to be in. Show how to make plots using this data format. 


## Input and cleaning processes for uncertain data

## Translating between different data types

## Creating maps with uncertain data

Spatial cases
- Choropleth map
    - ggplot2
- Bivar & VSUP
    - kind of made up with no obvious way to align results with hypothesis testing
    - 2D palette
    - vizumap, biscale, ggdibbler
- Pixel maps
    - ggdibbler and vizumap methods
- Glyph maps
    - vizumap


